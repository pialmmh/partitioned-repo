package com.telcobright.core.entity;

import java.time.LocalDateTime;

/**
 * Base interface for all entities used with ShardingRepository.
 * 
 * Requirements:
 * 1. All IDs must be String type (externally generated - NO AUTO_INCREMENT)
 * 2. All entities must have a datetime field for partition pruning
 * 3. No composite key support - single String ID only
 * 
 * Implementation notes:
 * - ID field must be annotated with @Id(autoGenerated = false)
 * - Datetime field must be annotated with @ShardingKey
 * - Use external ID generators: UUID, NanoID, ULID, etc.
 * 
 * Example:
 * <pre>
 * @Table(name = "users")
 * public class User implements ShardingEntity {
 *     @Id(autoGenerated = false)
 *     @Column(name = "user_id")
 *     private String id;
 *     
 *     @ShardingKey
 *     @Column(name = "created_at")
 *     private LocalDateTime createdAt;
 *     
 *     // implement interface methods...
 * }
 * </pre>
 */
public interface ShardingEntity {
    /**
     * Get the entity's unique identifier.
     * Must be externally generated (UUID, NanoID, ULID, etc.)
     * 
     * @return the entity ID as String
     */
    String getId();
    
    /**
     * Set the entity's unique identifier.
     * IDs must be generated externally before insertion.
     * 
     * @param id the entity ID as String
     */
    void setId(String id);
    
    /**
     * Get the datetime value used for partitioning.
     * This field is mandatory for partition pruning optimization.
     * 
     * @return the partitioning datetime
     */
    LocalDateTime getCreatedAt();
    
    /**
     * Set the datetime value used for partitioning.
     * 
     * @param createdAt the partitioning datetime
     */
    void setCreatedAt(LocalDateTime createdAt);
}