-------------------------------------------------------------------------------
Test set: com.telcobright.splitverse.tests.SmsMultiTableHourlyPartitionTest
-------------------------------------------------------------------------------
Tests run: 8, Failures: 2, Errors: 0, Skipped: 0, Time elapsed: 78.47 s <<< FAILURE! -- in com.telcobright.splitverse.tests.SmsMultiTableHourlyPartitionTest
com.telcobright.splitverse.tests.SmsMultiTableHourlyPartitionTest.testFindByIdAndPartitionColRange -- Time elapsed: 2.598 s <<< FAILURE!
org.opentest4j.AssertionFailedError: Should successfully find SMS with valid date ranges ==> expected: <true> but was: <false>
	at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)
	at org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)
	at org.junit.jupiter.api.AssertTrue.failNotTrue(AssertTrue.java:63)
	at org.junit.jupiter.api.AssertTrue.assertTrue(AssertTrue.java:36)
	at org.junit.jupiter.api.Assertions.assertTrue(Assertions.java:214)
	at com.telcobright.splitverse.tests.SmsMultiTableHourlyPartitionTest.testFindByIdAndPartitionColRange(SmsMultiTableHourlyPartitionTest.java:708)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)

com.telcobright.splitverse.tests.SmsMultiTableHourlyPartitionTest.testFindByIdAndPartitionColRangeFor100PercentSuccess -- Time elapsed: 0.017 s <<< FAILURE!
org.opentest4j.AssertionFailedError: Should find the SMS with exact ID and timestamp range
	at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:38)
	at org.junit.jupiter.api.Assertions.fail(Assertions.java:138)
	at com.telcobright.splitverse.tests.SmsMultiTableHourlyPartitionTest.testFindByIdAndPartitionColRangeFor100PercentSuccess(SmsMultiTableHourlyPartitionTest.java:758)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)

